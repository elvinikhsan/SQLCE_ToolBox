/***************** PLEASE ENABLE SQLCMD MODE!! ******************/
-- make sure to change the variables values accordingly
-- make sure you have performed the FULL backup of the database
/****************************************************************/
/* Declare variables */
-- the domain name
:SETVAR DNS ".contoso.com"
-- the nodes name
:SETVAR NODE01 "NODE01"
:SETVAR NODE02 "NODE02"
:SETVAR NODE03 "NODE03"
-- the ip addresses for mirroring endpoint
:SETVAR NODE01IP "10.0.1.1"
:SETVAR NODE02IP "10.0.1.2"
:SETVAR NODE03IP "172.18.0.3"
-- the AG name
:SETVAR AGNAME "AOAG01"
-- the database name
:SETVAR DBNAME "DUMMYDB"

PRINT 'Set SQLCMD variables done!';
GO

SELECT '$(DNS)' AS dns_name,'$(AGNAME)' AS ag_name, '$(DBNAME)' AS dbs_name,
	   '$(NODE01)' AS NODE01, '$(NODE01)$(DNS)' AS NODE01_fqdn, '$(NODE01IP)' AS NODE01_ip, 
	   '$(NODE02)' AS NODE02, '$(NODE02)$(DNS)' AS NODE02_fqdn, '$(NODE02IP)' AS NODE02_ip, 
	   '$(NODE03)' AS NODE03, '$(NODE03)$(DNS)' AS NODE03_fqdn, '$(NODE03IP)' AS NODE03_ip;
GO
/* Create availability group */
-- With SQL 2016+ we can use Direct Seeding instead for small-medium database size.
-- Here we connect to our primary replica (NODE01) and create our AG. */
:Connect $(NODE01)
/* We can use trace flag 9567 to enable compression for the VDI backup for the seeding process */
RAISERROR('Turning on TRACE 9567 on NODE01...',0,1) WITH NOWAIT;
GO
DBCC TRACEON (9567, -1);
GO
:CONNECT $(NODE01)
GO
USE [master]
GO
RAISERROR('Creating always on availability group...',0,1) WITH NOWAIT;
GO
CREATE AVAILABILITY GROUP [$(AGNAME)]
WITH (AUTOMATED_BACKUP_PREFERENCE = SECONDARY,DB_FAILOVER = ON, DTC_SUPPORT = PER_DB, FAILURE_CONDITION_LEVEL = 3, HEALTH_CHECK_TIMEOUT = 30000, CLUSTER_TYPE = WSFC)
FOR DATABASE [$(DBNAME)]
REPLICA ON N'$(NODE01)' WITH (ENDPOINT_URL = N'TCP://$(NODE01)$(DNS):5022', FAILOVER_MODE = AUTOMATIC, AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, SESSION_TIMEOUT = 10, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, PRIMARY_ROLE(ALLOW_CONNECTIONS = ALL), SECONDARY_ROLE(ALLOW_CONNECTIONS = ALL)),
	N'$(NODE02)' WITH (ENDPOINT_URL = N'TCP://$(NODE02)$(DNS):5022', FAILOVER_MODE = AUTOMATIC, AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, SESSION_TIMEOUT = 10, BACKUP_PRIORITY = 60, SEEDING_MODE = AUTOMATIC, PRIMARY_ROLE(ALLOW_CONNECTIONS = ALL), SECONDARY_ROLE(ALLOW_CONNECTIONS = ALL)),
	N'$(NODE03)' WITH (ENDPOINT_URL = N'TCP://$(NODE03)$(DNS):5022', FAILOVER_MODE = AUTOMATIC, AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, SESSION_TIMEOUT = 10, BACKUP_PRIORITY = 40, SEEDING_MODE = AUTOMATIC, PRIMARY_ROLE(ALLOW_CONNECTIONS = ALL), SECONDARY_ROLE(ALLOW_CONNECTIONS = ALL));
GO
RAISERROR('Always on avaibility group created...',0,1) WITH NOWAIT;
GO
:CONNECT $(NODE02)
RAISERROR('Joining NODE01...',0,1) WITH NOWAIT;
GO
ALTER AVAILABILITY GROUP [$(AGNAME)] JOIN;
GO
ALTER AVAILABILITY GROUP [$(AGNAME)] GRANT CREATE ANY DATABASE;
GO
:CONNECT $(NODE03)
RAISERROR('Joining NODE03...',0,1) WITH NOWAIT;
GO
ALTER AVAILABILITY GROUP [$(AGNAME)] JOIN;
GO
ALTER AVAILABILITY GROUP [$(AGNAME)] GRANT CREATE ANY DATABASE;
GO